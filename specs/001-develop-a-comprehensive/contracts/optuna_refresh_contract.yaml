version: 1
name: optuna_refresh_outputs
scope: results/optuna

entry_points:
  - scripts/refresh_optuna_summaries.py
  - results/optuna/refresh_all_studies.*

per_study_outputs:
  csv:
    - pattern: "!all_trials-<study>.csv"
      required_headers:
        - run_id
        - trial_id
        - mean_acc
      notes: CSV is produced by optuna_tools.csv_io.write_trials_csv
  plots_dir:
    path: "!plots-<study>"
    required_png_any:
      - history-<study>.png
      - history_basic-<study>.png
    optional_png_any:
      - slice-<study>.png
      - importances-<study>.png
      - contour-<study>.png
      - parallel-<study>.png
  reports:
    - "!top3-report-<study>.html"
    - "!top3-report-<study>.pdf"
  best_reports:
    - pattern: "best_consolidated_report-<run_id>.html"
      required: false
    - pattern: "best_consolidated_report-<run_id>.pdf"
      required: false

global_outputs:
  index_csv:
    path: optuna_runs_index.csv
    required_headers:
      - run_id
      - study
      - trial_id
      - mean_acc
      - std_acc

logging:
  refresh_log: refresh_run.log   # optional, may be added by T019
  completion_sentinel: COMPLETED.ok  # optional sentinel file with ISO timestamp in first line

acceptance:
  - each study directory contains at least one CSV matching the per_study_outputs.csv.pattern
  - each study plots directory exists and contains at least one of required_png_any
  - top 3 report HTML exists when at least one confusion matrix can be resolved; PDF is optional
  - global index CSV exists when --rebuild-index is used and has required headers
  - exit code is 0

