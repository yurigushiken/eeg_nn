# Title: Stage 1A â€” Architecture + Recipe (Clean, Non-Aug)
# Purpose: Merge your current Step 1 (scaffold) and Step 2 (stabilizers/optimizer)
#          to find a stronger non-aug baseline before any augmentation.
# Notes:
# - Augmentation stays OFF.
# - Warmup and dropout are included as stabilizers.
# - Ranges are bounded to avoid temporal geometry blowups in later blocks.

# --- modest training budget (clean, prunable) ---
epochs:
  method: int
  low: 40          # modestly higher so warmup can matter
  high: 64
early_stop:
  method: int
  low: 10
  high: 14
batch_size:
  method: categorical
  choices: [8]

# --- optimizer / scheduler (clean) ---
lr:
  method: log_uniform
  low: 7.0e-5
  high: 1.2e-3
weight_decay:
  method: categorical
  choices: [0.0, 1.0e-5, 2.5e-5, 5.0e-5]
scheduler_patience:
  method: categorical
  choices: [6, 8, 10]

# --- stabilizers (clean, no aug) ---
drop_prob:
  method: categorical
  choices: [0.30, 0.55, 0.70]
lr_warmup_frac:
  method: categorical
  choices: [0.0, 0.05, 0.10, 0.20]
lr_warmup_init:
  method: categorical
  choices: [0.0, 0.05, 0.10, 0.20, 0.30]

# --- architecture knobs (tuned only in this merged non-aug step) ---
filter_1:
  method: int
  low: 18
  high: 28
filter_2:
  method: int
  low: 36
  high: 54
kernel_block_1_2:
  method: int
  low: 40
  high: 72
kernel_block_4:
  method: int
  low: 24
  high: 40
kernel_block_5:
  method: int
  low: 20
  high: 32          # capped slightly to pair safely with d5
avg_pool_block4:
  method: categorical
  choices: [4, 5, 6] # categorical to avoid tiny, unstable pooling
avg_pool_block5:
  method: int
  low: 6
  high: 8
dilation_block_4:
  method: int
  low: 2
  high: 4
dilation_block_5:
  method: int
  low: 3
  high: 5           # capped to keep effective RF in check
depth_multiplier:
  method: int
  low: 2
  high: 4
activation:
  method: categorical
  choices: [elu]
max_norm_conv:
  method: uniform
  low: 1.6
  high: 2.2
max_norm_linear:
  method: uniform
  low: 0.45
  high: 0.60

# --- augmentation OFF in merged Step 1A ---
mixup_alpha:     { method: categorical, choices: [0.0] }
shift_p:         { method: categorical, choices: [0.0] }
shift_max_frac:  { method: categorical, choices: [0.0] }
scale_p:         { method: categorical, choices: [0.0] }
scale_min:       { method: categorical, choices: [1.0] }
scale_max:       { method: categorical, choices: [1.0] }
noise_p:         { method: categorical, choices: [0.0] }
noise_std:       { method: categorical, choices: [0.0] }
time_mask_p:     { method: categorical, choices: [0.0] }
time_mask_frac:  { method: categorical, choices: [0.0] }
chan_mask_p:     { method: categorical, choices: [0.0] }
chan_mask_ratio: { method: categorical, choices: [0.0] }
aug_warmup_frac: { method: categorical, choices: [0.0] }



materialized_dir:
  method: categorical
  choices:
    - D:/eeg_nn/data_preprocessed/hpf_1.0_lpf_35_baseline-on
    - D:/eeg_nn/data_preprocessed/hpf_1.0_lpf_35_baseline-off
    - D:/eeg_nn/data_preprocessed/hpf_2.0_lpf_40_baseline-off
    - D:/eeg_nn/data_preprocessed/hpf_2.0_lpf_40_baseline-on
    - D:/eeg_nn/data_preprocessed/hpf_2.0_lpf_35_baseline-on
    - D:/eeg_nn/data_preprocessed/hpf_2.0_lpf_35_baseline-off
    - D:/eeg_nn/data_preprocessed/hpf_1.0_lpf_40_baseline-on
    - D:/eeg_nn/data_preprocessed/hpf_1.0_lpf_40_baseline-off
    - D:/eeg_nn/data_preprocessed/hpf_1.0_lpf_45_baseline-on
    - D:/eeg_nn/data_preprocessed/hpf_1.0_lpf_45_baseline-off
    - D:/eeg_nn/data_preprocessed/hpf_1.5_lpf_35_baseline-on
    - D:/eeg_nn/data_preprocessed/hpf_1.5_lpf_35_baseline-off
    - D:/eeg_nn/data_preprocessed/hpf_1.5_lpf_40_baseline-on
    - D:/eeg_nn/data_preprocessed/hpf_1.5_lpf_40_baseline-off
    - D:/eeg_nn/data_preprocessed/hpf_1.5_lpf_45_baseline-on
    - D:/eeg_nn/data_preprocessed/hpf_1.5_lpf_45_baseline-off
    - D:/eeg_nn/data_preprocessed/hpf_2.0_lpf_45_baseline-on
    - D:/eeg_nn/data_preprocessed/hpf_2.0_lpf_45_baseline-off
    - D:/eeg_nn/data_preprocessed/mne-hpf_1.5_lpf_40_baseline-off
